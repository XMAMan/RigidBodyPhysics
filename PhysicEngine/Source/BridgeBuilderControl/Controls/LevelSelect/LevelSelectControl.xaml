<UserControl x:Class="BridgeBuilderControl.Controls.LevelSelect.LevelSelectControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BridgeBuilderControl.Controls.LevelSelect"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <DockPanel Background="Black">
        <DockPanel.Resources>
            <!-- Mit diesen Style kann ich ein Button ohne Mouse-Hover-Effekt erzeugen -->
            <Style TargetType="Button"  x:Key="NoMouseOverButtonStyle"  >
                <Setter Property="Foreground" Value="Gray"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </DockPanel.Resources>

        <DockPanel DockPanel.Dock="Top">
            <Button DockPanel.Dock="Left" FontSize="30"  FontFamily="Adobe Caslon Pro" Content="Back" Style="{StaticResource  NoMouseOverButtonStyle}" Command="{Binding GoBackClick}"/>
            <StackPanel DockPanel.Dock="Top" HorizontalAlignment="Center" >
                <Label HorizontalAlignment="Center" Content="Start Game" Margin="0 -5 0 0" Foreground="White" FontSize="30" FontFamily="Adobe Caslon Pro"/>
            </StackPanel>            
        </DockPanel>

        <ListBox ScrollViewer.VerticalScrollBarVisibility="Hidden" Background="Black" BorderThickness="0" HorizontalAlignment="Center" VerticalAlignment="Center" Height="600" ItemsSource="{Binding Levels}" SelectedItem="{Binding SelectedItem}">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True" Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            
            <!-- Mit diesen Style verhindere ich den Mouse-Hover-Effekt-->
            <!-- Quelle: https://stackoverflow.com/questions/15632493/wpf-listbox-turn-off-hover-effect -->
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="Padding" Value="2,0,0,0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>                
                <DataTemplate>
                    <Button Content="{Binding Text}" Command="{Binding ClickItem}"  FontSize="30" FontFamily="Adobe Caslon Pro" Style="{StaticResource  NoMouseOverButtonStyle}" Margin="0 0 0 -20"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>       

    </DockPanel>
</UserControl>
