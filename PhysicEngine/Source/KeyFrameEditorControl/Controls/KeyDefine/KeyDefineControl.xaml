<UserControl x:Class="KeyFrameEditorControl.Controls.KeyDefine.KeyDefineControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:KeyFrameEditorControl.Controls.KeyDefine"
             xmlns:myWpf="clr-namespace:WpfControls.Controls.CameraSetting;assembly=WpfControls"
             xmlns:playAnimation="clr-namespace:KeyFrameEditorControl.Controls.PlayAnimation"
             xmlns:controlListbox="clr-namespace:KeyFrameEditorControl.Controls.ControlListBox"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="1000">
    <DockPanel>
        <DockPanel DockPanel.Dock="Top">
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                <StackPanel>
                    <local:FloatListCanvas x:Name="floatListCanvas1" Width="400" Height="40" Margin="5" HorizontalAlignment="Left" Numbers="{Binding Keys}" SelectedEntry="{Binding SelectedKey}" NewNumber="{Binding NewKeyHandler}"/>

                    <!-- Die View-Klasse von der ProgressBar ist so gebaut, dass sie nach ein Kind-Element mit den Name PART_Track sucht und dessen Width-Property
                     ausließt um zu ermitteln, wie viele Pixel breit die ProgressBar ist. Dann sucht sie nach ein Element mit Name PART_Indicator und sie setzt die 
                     Width-Property auf den Wert: PART_Indicator.Width=Value*PART_Track.Width (Value ist hier eine Zahl die von 0..1 geht)
                     Die beiden Elemente PART_Track und PART_Indicator sind hier im Grid was dazu führt, dass sie übereinander gezeichnet werden
                     Zuerst wird der Hintergrund hier der blaue runde Border gezeichnet und darüber dann der Border PART_Indicator, dessen Width immer weiter wächst.
                     In diesen PART_Indicator-Border zeichne ich dann an den rechten Rand den roten Kreis.
                     Erst wenn man all dieses Hintergrundwissen hat kann man dann das Beispiel von Microsoft verstehen:
                https://learn.microsoft.com/en-us/dotnet/desktop/wpf/controls/progressbar-styles-and-templates?view=netframeworkdesktop-4.8
                https://markheath.net/post/styling-a-vertical-progressbar-in-wpf
                -->

                    <ProgressBar Width="400" Height="20" Minimum="0" Maximum="1" Value="{Binding TimePosition}">
                        <ProgressBar.Template>
                            <ControlTemplate TargetType="ProgressBar">
                                <Grid>
                                    <Border Name="PART_Track" CornerRadius="2" BorderBrush="Blue" BorderThickness="1" Height="4"/>
                                    <Border Name="PART_Indicator" HorizontalAlignment="Left">
                                        <Path Margin="0 0 -10 0" Width="20" Height="20" Fill="Red" HorizontalAlignment="Right">
                                            <Path.Data>
                                                <EllipseGeometry Center="10,10" RadiusX="5" RadiusY="5"></EllipseGeometry>
                                            </Path.Data>
                                        </Path>
                                    </Border>

                                </Grid>
                            </ControlTemplate>
                        </ProgressBar.Template>
                    </ProgressBar>

                </StackPanel>
                <StackPanel>
                    <Button Width="30" Height="30" ToolTip="Revert Animation" Command="{Binding RevertKeysClick}">
                        <Image Source="/KeyFrameEditorControl;component/Controls/KeyDefine/Revert.png" />
                    </Button>
                    <Button Margin="0 10 0 0" Width="30" Height="30" ToolTip="Change Backgroundimage" Command="{Binding ChangeBackgroundImageClick}">
                        <Image Source="/KeyFrameEditorControl;component/Controls/KeyDefine/ChangeBackground.PNG" />
                    </Button>
                </StackPanel>

                <myWpf:CameraSettingControl Width="90" Height="70" DataContext="{Binding CameraViewModel}"/>
            </StackPanel>


            <Border BorderBrush="Orange" BorderThickness="5"  DockPanel.Dock="Right" HorizontalAlignment="Right">
                <playAnimation:PlayAnimationControl DataContext="{Binding PlayAnimationViewModel}" />
            </Border>

        </DockPanel>

        <Border DockPanel.Dock="Right" BorderThickness="5" BorderBrush="Yellow">
            <controlListbox:ControlListBox DataContext="{Binding BoxViewModel}"/>
        </Border>
        <Border BorderThickness="5" BorderBrush="DarkBlue" x:Name="graphicControlBorder"/>
    </DockPanel>
</UserControl>
